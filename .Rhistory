source("C:/Users/emmel/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/S0/51/Attachments/Emmy_R[4276].R")
source("C:/Users/emmel/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/S0/51/Attachments/Emmy_R[4276].R")
source("C:/Users/emmel/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/S0/51/Attachments/Emmy_R[4276].R")
source("C:/Users/emmel/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/S0/51/Attachments/Emmy_R[4276].R", echo=TRUE)
# data_pivot <- pivot_longer(data, cols=c(Jun.15, Jun.22, Jul.6, Jul.13, Jul.20, Jul.27, Aug.3, Aug.10), names_to = 'Date', values_to = 'Diameter')
data_pivot$Accession_ID <- as.character(data_pivot$Accession_ID)
f <- 1
View(f)
install.packages(dplyr)
install.packages("dplyr")
??corrplot
?corrplot
?round
?read.csv
?data.frame
library(tidyverse)
?plot
library(help = "base")
plot(cars)
df <- merge(c(1,2,3), c(4,6,8))
df
plot(df)
plot(df, x~y)
plot(df, y~x)
plot(df, x, y)
?plot
plot(c(2,4,6), c(5,6,7))
plot(y~x, data = df)
plot(x~y, data = df)
?require
?boxplot
?barplot
barplot(df)
barplot(y~x, data = df)
View(height4)
height4
head(longley)
barplot(GNP ~ Year, data = ongley)
barplot(GNP ~ Year, data = longley)
?hist
head(islands)
hist(islands)
?boxplot
?pie
?plot
?barplot
?hist
?boxplot
?pie
?pch
?lty
?plot
colors()
palette()
palette.colors()
palette.pals()
library(RColorBrewer)
brewer.pal()
?RColorBrewer
brewer.pal.info
library(ggplot2)
?geom_point
?aes
library(ggplot2)
?aes
?geom_bar
library(ggplot2)
?geom_bar
library(ggplot2)
library(plantecophys)
library(tidyverse)
## Plot all ACi curves on one graph by Species
ggplot(cmplt.grp, mapping = aes(x = Ci, y = A, color = fourlettercode)) +
geom_point(mapping = aes(pch = Data_point)) +
theme_classic()
## Load Packages
library(tidyverse)
library(plantecophys)
## Plot all ACi curves on one graph by Species
ggplot(cmplt.grp, mapping = aes(x = Ci, y = A, color = fourlettercode)) +
geom_point(mapping = aes(pch = Data_point)) +
theme_classic()
source("C:/Users/emmel/Desktop/DAT_proj/Tapajos_DAT_data_assembly.R", echo=TRUE)
cmplt.rm_out <- filter(complete_sp, Ci > -50 & A < 31)
## Group by Four Letter Code
cmplt.grp <- group_by(cmplt.rm_out, fourlettercode)
## Plot all ACi curves on one graph by Species
ggplot(cmplt.grp, mapping = aes(x = Ci, y = A, color = fourlettercode)) +
geom_point(mapping = aes(pch = Data_point)) +
theme_classic()
for (code in unique(cmplt.grp$fourlettercode)) {
df1 <- cmplt.grp %>% filter(fourlettercode == code)
gg1 <- ggplot(data = df1, mapping = aes(x = Ci, y = A, color = Data_point)) +
geom_point() +
theme_classic() +
scale_color_viridis_d()
filename1 <- paste("plot_", code, ".png")
ggsave(filename1, gg1)
}
cmplt_DAT <- filter(cmplt.grp, Data_point == "Before_DAT")
DAT_fits <- fitacis(cmplt_DAT, group = "fourlettercode",
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE,
id = Leaf_number)
### Leaf 1 Trad
abma <- filter(complete_sp, fourlettercode == "ABMA")
abma_trad <- filter(abma, Data_point == "Traditional")
abma_trad_l1 <- filter(abma_trad, Leaf_number == 1)
abma_trad_aci_l1 <- fitaci(data = abma_trad_l1,
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"),
fitTPU = TRUE,
Tcorrect = TRUE)
warnings()
library(tidyverse)
library(plantecophys)
#library(RCurl)
DAT_fits <- fitacis(cmplt_DAT, group = "fourlettercode",
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE,
id = Leaf_number)
fitacis
data <- cmplt_DAT
d <- split(data, data[, "fourlettercode"])
fitacis(d, fourlettercode, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE)
fitacis(data, fourlettercode, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE)
fitacis(d, "fourlettercode", varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE)
fitacis(data, "fourlettercode", varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE)
fitaci(d$ABMA, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE)
abma_trad_aci_l1 <- fitaci(data = abma_trad_l1,
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"),
fitTPU = TRUE,
Tcorrect = TRUE)
warnings()
colnames(cmplt_DAT)
## Plot all ACi curves on one graph by Species
ggplot(cmplt.grp, mapping = aes(x = Ci, y = A, color = fourlettercode)) +
geom_point(mapping = aes(pch = Data_point)) +
theme_classic()
for (code in unique(cmplt.grp$fourlettercode)) {
df1 <- cmplt.grp %>% filter(fourlettercode == code)
gg1 <- ggplot(data = df1, mapping = aes(x = Ci, y = A, color = Data_point)) +
geom_point() +
theme_classic() +
scale_color_viridis_d()
filename1 <- paste("plot_", code, ".png")
ggsave(filename1, gg1)
}
for (code in 1:length(unique(cmplt_trad$k67.id))) {
# First, separate for each tree
ind <- cmplt_trad$k67.id == cmplt_trad$k67.id[code]
trad <- cmplt_trad[ind, ]
print(trad$k67.id)
library(tidyverse)
library(plantecophys)
# Load Data
## Make sure working directory is DAT_proj
getwd()
setwd("C:/Users/emmel/Desktop/DAT_proj")
#setwd()
complete_sp <- read.csv("Inputs/clean_aci_data_one_file.csv",
sep = ",",
fileEncoding="latin1")
cmplt.rm_out <- filter(complete_sp, Ci > -50 & A < 31)
cmplt.rm_out <- filter(complete_sp, Ci > -50 & A < 31)
View(complete_sp)
colnames(complete_sp)
which(complete_sp$Ci < -50) #4 Ci values are super negative: 394, 395, 396, 398
complete_sp[c(394,395,396,398),19] # What are those values? Should they be outliers?
which(complete_sp$A > 31) # 2 A values greater than 31: 399 and 400
complete_sp[c(397,398,399,400,401),17]
cmplt.rm_out <- filter(complete_sp, Ci > -50 & A < 31)
cmplt.rm_out <- filter(complete_sp, Ci > -50 & A < 31)
cmplt.rm_out <- filter(complete_sp, Ci > -50
)
str(complete_sp)
# Load Packages/Data ------------------------------------------------------
## Load Packages
library(tidyverse)
library(plantecophys)
#setwd()
complete_sp <- read.csv("Inputs/clean_aci_data_one_file.csv",
sep = ",",
fileEncoding ="latin1")
cmplt.rm_out <- filter(complete_sp, Ci > -50 & A < 31)
## Group by Four Letter Code
cmplt.grp <- group_by(cmplt.rm_out, fourlettercode) %>%
group_by(Leaf_number)
# the vectors you need
library(greekLetters)
cmplt_trad <- filter(cmplt.grp, Data_point == "Traditional") %>%
select(-contains(greeks("Delta")))
cmplt_trad <- as.data.frame(cmplt_trad)
trad_pars <- data.frame()
for (code in 1:length(unique(cmplt_trad$k67.id))) {
# First, separate for each tree
ind <- cmplt_trad$k67.id == cmplt_trad$k67.id[code]
trad <- cmplt_trad[ind, ]
print(trad$k67.id)
}
for (code in 1:length(unique(cmplt_trad$k67.id))) {
# First, separate for each tree
ind <- cmplt_trad$k67.id == cmplt_trad$k67.id[code]
trad <- cmplt_trad[ind, ]
print(trad$k67.id)
for (lf in 1:length(unique(trad$Leaf_number))) {
# Next, separate for each leaf
indlf <- trad$Leaf_number == trad$Leaf_number[lf]
tradlf <- trad[indlf, ]
print(tradlf$Leaf_number)
}}
for (code in 1:length(unique(cmplt_trad$k67.id))) {
# First, separate for each tree
ind <- cmplt_trad$k67.id == cmplt_trad$k67.id[code]
trad <- cmplt_trad[ind, ]
print(trad$k67.id)
for (lf in 1:length(unique(trad$Leaf_number))) {
# Next, separate for each leaf
indlf <- trad$Leaf_number == trad$Leaf_number[lf]
tradlf <- trad[indlf, ]
print(tradlf$Leaf_number)
fit <- fitaci(data = tradlf, varnames = list(ALEAF = "Asty", Tleaf = "Tleaf",
Ci = "Ci", PPFD = "Qin"),
fitTPU = FALSE, Tcorrect = TRUE)
print(fit)
plot(fit, main = paste(cmplt_trad$k67.id[code], "Leaf", trad$Leaf_number[lf]))
assign(paste0("trad_fit_", cmplt_trad$k67.id[code], "_lf", trad$Leaf_number[lf]), fit)
summary(fit)
#dev.print(png, file =  paste0("trad_fit_", cmplt_trad$k67.id[code], "_lf",
#                       trad$Leaf_number[lf], ".png"))
}
# Third, pull the parameters for each and append to a single dataframe
par <- fit$pars
par.df <- as.data.frame(par, row.names = NULL)
par.df2 <- mutate(par.df, Result = c("Vcmax", "Jmax", "Rd"))
par.df3 <- mutate(par.df2, Curve = as.character(paste0(cmplt_trad$k67.id[code], "_lf",
trad$Leaf_number[lf])))
trad_pars <- bind_rows(trad_pars, par.df3)
}
print(trad_pars)
