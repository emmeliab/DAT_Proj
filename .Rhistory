rmv_stbl()
`data_2022-08-11-0904_walkup_aci_clean.xlsx` <- `data_2022-08-11-0904_walkup_aci_clean.xlsx`%>%
rename("Tree_Identifier" = "Tree Identifier") %>%
rmv_stbl()
`data_2022-08-11-0949_walkup_aci_clean.xlsx` <- `data_2022-08-11-0949_walkup_aci_clean.xlsx`%>%
rename("Tree_Identifier" = "Tree Identifier") %>%
rmv_stbl()
`data_2022-08-11-1050_walkup_aci_clean.xlsx` <- `data_2022-08-11-1050_walkup_aci_clean.xlsx`%>%
rename("Tree_Identifier" = "Tree Identifier") %>%
rename("Data_QC" = "...248") %>%
rmv_stbl()
`data_2022-08-12-0928_walkup_aci_clean.xlsx` <- `data_2022-08-12-0928_walkup_aci_clean.xlsx`%>%
rename("Tree_Identifier" = "Tree Identifier") %>%
rename("Data_QC" = "...248") %>%
rmv_stbl()
`data_2022-08-13-1007_walkup_aci_clean.xlsx` <- `data_2022-08-13-1007_walkup_aci_clean.xlsx`%>%
rename("Tree_Identifier" = "Tree Identifier") %>%
rename("Data_QC" = "...248") %>%
rmv_stbl()
`data_2022-08-14-0906_walkup_aci_clean.xlsx` <- `data_2022-08-14-0906_walkup_aci_clean.xlsx`%>%
rename("Tree_Identifier" = "Tree Identifier") %>%
rename("Data_QC" = "...248") %>%
rmv_stbl()
## Fix data columns into the same kind of data
`data_2022-08-06-1020_walkup_aci_clean.xlsx`$"Leaf_position" <- as.numeric(`data_2022-08-06-1020_walkup_aci_clean.xlsx`$"Leaf_position")
`data_2022-08-07-0941_walkup_aci_clean.xlsx`$"Leaf_position" <- as.numeric(`data_2022-08-07-0941_walkup_aci_clean.xlsx`$"Leaf_position")
`data_2022-08-11-0904_walkup_aci_clean.xlsx`$"Leaf_position" <- as.numeric(`data_2022-08-11-0904_walkup_aci_clean.xlsx`$"Leaf_position")
`data_2022-08-11-0949_walkup_aci_clean.xlsx`$"Leaf_position" <- as.numeric(`data_2022-08-11-0949_walkup_aci_clean.xlsx`$"Leaf_position")
`data_2022-08-11-1050_walkup_aci_clean.xlsx`$"Leaf_position" <- as.numeric(`data_2022-08-11-1050_walkup_aci_clean.xlsx`$"Leaf_position")
`data_2022-08-12-0928_walkup_aci_clean.xlsx`$"Leaf_position" <- as.numeric(`data_2022-08-12-0928_walkup_aci_clean.xlsx`$"Leaf_position")
`data_2022-08-13-1007_walkup_aci_clean.xlsx`$"Leaf_position" <- as.numeric(`data_2022-08-13-1007_walkup_aci_clean.xlsx`$"Leaf_position")
`data_2022-08-14-0906_walkup_aci_clean.xlsx`$"Leaf_position" <- as.numeric(`data_2022-08-14-0906_walkup_aci_clean.xlsx`$"Leaf_position")
1160 + 1610 + 395 + 12 + 808 + 1609 + 1211 + 1213
## Merge the data together
all_aci.df <- bind_rows(`data_2022-08-06-1020_walkup_aci_clean.xlsx`,
`data_2022-08-07-0941_walkup_aci_clean.xlsx`,
`data_2022-08-11-0904_walkup_aci_clean.xlsx`,
`data_2022-08-11-0949_walkup_aci_clean.xlsx`,
`data_2022-08-11-1050_walkup_aci_clean.xlsx`,
`data_2022-08-12-0928_walkup_aci_clean.xlsx`,
`data_2022-08-13-1007_walkup_aci_clean.xlsx`,
`data_2022-08-14-0906_walkup_aci_clean.xlsx`)
?filter
## Make sure all the data have the same columns (in this case, the 6th and 7th are missing
## some columns)
Reduce(setdiff, list(colnames(`data_2022-08-06-1020_walkup_aci_clean.xlsx`),
colnames(`data_2022-08-07-0941_walkup_aci_clean.xlsx`),
colnames(`data_2022-08-11-0904_walkup_aci_clean.xlsx`),
colnames(`data_2022-08-11-0949_walkup_aci_clean.xlsx`),
colnames(`data_2022-08-11-1050_walkup_aci_clean.xlsx`),
colnames(`data_2022-08-12-0928_walkup_aci_clean.xlsx`),
colnames(`data_2022-08-13-1007_walkup_aci_clean.xlsx`),
colnames(`data_2022-08-14-0906_walkup_aci_clean.xlsx`))) #finds the unique columns
755 + 1215 + 393 + 11 + 805 + 1209 + 805 + 1209
## Clean the data by filtering out excluded points
all_aci_cln <- filter(all_aci.df, Data_QC == "OK")
View(all_aci_cln)
trees <- pull(all_aci_cln, Tree_Identifier)
trees
unique(all_aci_cln$Tree_Identifier)
remove(trees)
unique(`data_2022-08-06-1020_walkup_aci_clean.xlsx`$Tree_Identifier)
unique(`data_2022-08-07-0941_walkup_aci_clean.xlsx`$Tree_Identifier)
unique(`data_2022-08-11-0904_walkup_aci_clean.xlsx`$Tree_Identifier)
library(tidyverse)
library(plantecophys)
head(complete)
# Load Data
#complete <- read.csv("~/Documents/PhD/DAT_Tapajos/Inputs/clean_aci_data_one_file.csv")
complete <-  read.csv("https://github.com/emmeliab/DAT_Proj/blob/382a43960a9509f9a188f1667727494f91f6345a/clean_aci_data_one_file.csv",
sep = ",", header = TRUE)
?read.csv
install.packages("RCurl")
library(RCurl)
# Load Data
#complete <- read.csv("~/Documents/PhD/DAT_Tapajos/Inputs/clean_aci_data_one_file.csv")
complete <- getURL("https://github.com/emmeliab/DAT_Proj/blob/382a43960a9509f9a188f1667727494f91f6345a/clean_aci_data_one_file.csv") %>%
read.csv(sep = ",", header = TRUE)
head(complete)
# Load Data
#complete <- read.csv("~/Documents/PhD/DAT_Tapajos/Inputs/clean_aci_data_one_file.csv")
complete <- getURL("https://github.com/emmeliab/DAT_Proj/blob/382a43960a9509f9a188f1667727494f91f6345a/clean_aci_data_one_file.csv") %>%
read.csv(sep = ",", header = TRUE)
# Load Data
#complete <- read.csv("~/Documents/PhD/DAT_Tapajos/Inputs/clean_aci_data_one_file.csv")
complete <- getURL("https://github.com/emmeliab/DAT_Proj/blob/382a43960a9509f9a188f1667727494f91f6345a/clean_aci_data_one_file.csv") %>%
read.csv()
complete <- read.csv(file = "https://raw.githubusercontent.com/emmeliab/DAT_Proj/main/clean_aci_data_one_file.csv?token=GHSAT0AAAAAABYDTOTAVT4ZXXQUUCR7SVPGYYRBN7A",
sep = ",", header = TRUE)
source("C:/Users/emmel/Desktop/DAT_proj/Tapajos_DAT_data_assembly.R", echo=TRUE)
complete <- all_aci_cln_num
?recode
### adding a column for a four-letter species code and a column for species name
complete_species <- all_aci_cln_num %>%
mutate(fourlettercode = Tree_Identifier, SciName = Tree_Identifier)
complete_species$fourlettercode <- recode(complete_species$fourlettercode,
'Maca1' = 'MAEL',
'Tree3' = 'CHTU',
'tree8' = 'COSP',
'tree9' = 'APCO',
'Tree10' = 'VICA',
'tree11' = 'COST',
'tree12' = 'UNKN',
'tree22' = 'ABMA')
complete_species$SciName <- recode(complete_species$SciName,
'Maca1' = 'Manilkara elata',
'Tree3' = 'Chimaris turbinata',
'tree8' = 'Coussarea sp',
'tree9' = 'Aparisthmium cordatum',
'Tree10' = 'Vismia cayennensis',
'tree11' = 'Couratari stellata',
'tree12' = 'Unknown sp',
'tree22' = 'Abarema mataybifolia')
head(complete_species)
View(complete_species)
complete_sp <- complete_species
remove(complete, complete_species)
Ci_outlier_index <- which(complete_sp$Ci < -50) #4 values are super negative, 394,
##395, 396, 398
print(Ci_outlier_index)
A_outlier_index <- which(complete_sp$A > 31) # 2 values greater than 31, 395 and 396
print(A_outlier_index)
which(complete_sp$Ci < -50) #4 values are super negative, 394,
which(complete_sp$Ci < -50) #4 Ci values are super negative: 394, 395, 396, 398
which(complete_sp$A > 31) # 2 A values greater than 31: 395 and 396
cmplt.rm_out <- filter(complete_sp, Ci > -50 & A < 31)
## Group by Four Letter Code
cmplt.grp <- group_by(cmplt.rm_out, fourlettercode)
## Plot all ACi curves on one graph by Species
ggplot(cmplt.grp, mapping = aes(x = Ci, y = A, color = fourlettercode)) +
geom_point(pch = Data_Point) +
theme_classic()
## Plot all ACi curves on one graph by Species
ggplot(cmplt.grp, mapping = aes(x = Ci, y = A, color = fourlettercode)) +
geom_point(pch = Data_point) +
theme_classic()
## Plot all ACi curves on one graph by Species
ggplot(cmplt.grp, mapping = aes(x = Ci, y = A, color = fourlettercode)) +
geom_point(mapping = aes(pch = Data_point)) +
theme_classic()
## Clean the data by filtering out excluded points and After DAT points
all_aci_cln <- all_aci.df %>%
filter(Data_QC == "OK") %>%
filter(Data_point == "Before_DAT" | "Traditional")
## Clean the data by filtering out excluded points and After DAT points
all_aci_cln <- all_aci.df %>%
filter(Data_QC == "OK") %>%
filter(Data_point = "Before_DAT" | "Traditional")
## Clean the data by filtering out excluded points and After DAT points
all_aci_cln <- all_aci.df %>%
filter(Data_QC == "OK") %>%
filter(Data_point != "After_DAT")
View(all_aci_cln)
## Convert important columns to numeric
all_aci_cln_num <- all_aci_cln %>%
mutate(Ci = parse_number(Ci)) %>%
mutate(A = parse_number(A)) %>%
mutate(Ca = parse_number(Ca)) %>%
mutate(E = parse_number(E)) %>%
mutate(Qin = parse_number(Qin)) %>%
mutate(Tleaf = parse_number(Tleaf))
### adding a column for a four-letter species code and a column for species name
complete_sp <- all_aci_cln_num %>%
mutate(fourlettercode = Tree_Identifier, SciName = Tree_Identifier)
complete_sp$fourlettercode <- recode(complete_species$fourlettercode,
'Maca1' = 'MAEL',
'Tree3' = 'CHTU',
'tree8' = 'COSP',
'tree9' = 'APCO',
'Tree10' = 'VICA',
'tree11' = 'COST',
'tree12' = 'UNKN',
'tree22' = 'ABMA')
complete_sp$fourlettercode <- recode(complete_sps$fourlettercode,
'Maca1' = 'MAEL',
'Tree3' = 'CHTU',
'tree8' = 'COSP',
'tree9' = 'APCO',
'Tree10' = 'VICA',
'tree11' = 'COST',
'tree12' = 'UNKN',
'tree22' = 'ABMA')
complete_sp$fourlettercode <- recode(complete_sp$fourlettercode,
'Maca1' = 'MAEL',
'Tree3' = 'CHTU',
'tree8' = 'COSP',
'tree9' = 'APCO',
'Tree10' = 'VICA',
'tree11' = 'COST',
'tree12' = 'UNKN',
'tree22' = 'ABMA')
complete_sp$SciName <- recode(complete_sp$SciName,
'Maca1' = 'Manilkara elata',
'Tree3' = 'Chimaris turbinata',
'tree8' = 'Coussarea sp',
'tree9' = 'Aparisthmium cordatum',
'Tree10' = 'Vismia cayennensis',
'tree11' = 'Couratari stellata',
'tree12' = 'Unknown sp',
'tree22' = 'Abarema mataybifolia')
head(complete_sp)
# Save Complete Data File -------------------------------------------------
## Save the assembled file as a .csv
write.csv(x = complete_sp, file = "clean_aci_data_one_file.csv")
cmplt.rm_out <- filter(complete_sp, Ci > -50 & A < 31)
## Group by Four Letter Code
cmplt.grp <- group_by(cmplt.rm_out, fourlettercode)
## Plot all ACi curves on one graph by Species
ggplot(cmplt.grp, mapping = aes(x = Ci, y = A, color = fourlettercode)) +
geom_point(mapping = aes(pch = Data_point)) +
theme_classic()
gg1 <- ggplot(df, mapping = aes(x = Ci, y = A, color = Data_point)) +
geom_point() +
theme_classic()
gg1 <- ggplot(data = df, mapping = aes(x = Ci, y = A, color = Data_point)) +
geom_point() +
theme_classic()
gg1 <- ggplot(data = df1, mapping = aes(x = Ci, y = A, color = Data_point)) +
geom_point() +
theme_classic()
## Make and save plots for each individual species
for flc in unique(cmplt.grp$fourlettercode){
df1 <- cmplt.grp %>% filter(fourlettercode == flc)
gg1 <- ggplot(data = df1, mapping = aes(x = Ci, y = A, color = Data_point)) +
geom_point() +
theme_classic()
}
## Plot all ACi curves on one graph by Species
ggplot(cmplt.grp, mapping = aes(x = Ci, y = A, color = fourlettercode)) +
geom_point(mapping = aes(pch = Data_point)) +
theme_classic()
for flc in unique(cmplt.grp$fourlettercode) {
df1 <- cmplt.grp %>% filter(fourlettercode == flc)
gg1 <- ggplot(data = df1, mapping = aes(x = Ci, y = A, color = Data_point)) +
geom_point() +
theme_classic()
filename1 <- paste("plot_", flc, ".png")
ggsave(filename1, gg1)
}
for code in unique(cmplt.grp$fourlettercode) {
df1 <- cmplt.grp %>% filter(fourlettercode == code)
gg1 <- ggplot(data = df1, mapping = aes(x = Ci, y = A, color = Data_point)) +
geom_point() +
theme_classic()
filename1 <- paste("plot_", flc, ".png")
ggsave(filename1, gg1)
}
for LPARN in unique(cmplt.grp$fourlettercode) {
df1 <- cmplt.grp %>% filter(fourlettercode == code)
gg1 <- ggplot(data = df1, mapping = aes(x = Ci, y = A, color = Data_point)) +
geom_point() +
theme_classic()
filename1 <- paste("plot_", flc, ".png")
ggsave(filename1, gg1)
}
for (code in unique(cmplt.grp$fourlettercode)) {
df1 <- cmplt.grp %>% filter(fourlettercode == code)
gg1 <- ggplot(data = df1, mapping = aes(x = Ci, y = A, color = Data_point)) +
geom_point() +
theme_classic()
filename1 <- paste("plot_", flc, ".png")
ggsave(filename1, gg1)
}
for (code in unique(cmplt.grp$fourlettercode)) {
df1 <- cmplt.grp %>% filter(fourlettercode == code)
gg1 <- ggplot(data = df1, mapping = aes(x = Ci, y = A, color = Data_point)) +
geom_point() +
theme_classic()
filename1 <- paste("plot_", code, ".png")
ggsave(filename1, gg1)
}
for (code in unique(cmplt.grp$fourlettercode)) {
df1 <- cmplt.grp %>% filter(fourlettercode == code)
gg1 <- ggplot(data = df1, mapping = aes(x = Ci, y = A, color = Data_point)) +
geom_point() +
theme_classic() +
scale_x_manual(values = c(-50, 2000)) +
scale_y_manual(values = c(-50, 35)) +
scale_color_viridis_c()
filename1 <- paste("plot_", code, ".png")
ggsave(filename1, gg1)
}
for (code in unique(cmplt.grp$fourlettercode)) {
df1 <- cmplt.grp %>% filter(fourlettercode == code)
gg1 <- ggplot(data = df1, mapping = aes(x = Ci, y = A, color = Data_point)) +
geom_point() +
theme_classic() +
xlim(-50, 2000)
ylim(-50, 35)
scale_color_viridis_c()
filename1 <- paste("plot_", code, ".png")
ggsave(filename1, gg1)
}
for (code in unique(cmplt.grp$fourlettercode)) {
df1 <- cmplt.grp %>% filter(fourlettercode == code)
gg1 <- ggplot(data = df1, mapping = aes(x = Ci, y = A, color = Data_point)) +
geom_point() +
theme_classic() +
xlim(-50, 2000) +
ylim(-50, 35) +
scale_color_viridis_c()
filename1 <- paste("plot_", code, ".png")
ggsave(filename1, gg1)
}
for (code in unique(cmplt.grp$fourlettercode)) {
df1 <- cmplt.grp %>% filter(fourlettercode == code)
gg1 <- ggplot(data = df1, mapping = aes(x = Ci, y = A, color = Data_point)) +
geom_point() +
theme_classic() +
xlim(-50, 2000) +
ylim(-50, 35) +
scale_color_viridis_c()
filename1 <- paste("plot_", code, ".png")
ggsave(filename1, gg1)
}
for (code in unique(cmplt.grp$fourlettercode)) {
df1 <- cmplt.grp %>% filter(fourlettercode == code)
gg1 <- ggplot(data = df1, mapping = aes(x = Ci, y = A, color = Data_point)) +
geom_point() +
theme_classic() +
xlim(-50, 2000) +
ylim(-50, 35) +
scale_color_viridis_d()
filename1 <- paste("plot_", code, ".png")
ggsave(filename1, gg1)
}
for (code in unique(cmplt.grp$fourlettercode)) {
df1 <- cmplt.grp %>% filter(fourlettercode == code)
gg1 <- ggplot(data = df1, mapping = aes(x = Ci, y = A, color = Data_point)) +
geom_point() +
theme_classic() +
scale_color_viridis_d()
filename1 <- paste("plot_", code, ".png")
ggsave(filename1, gg1)
}
### plot Vcmax for one leaf from a given species, in this case ABMA.
### having a hard time getting the plural "fitacis" function to work, so iteratively used "fitaci"
### Leaf 1 DAT
abma <- filter(cmplt.grp, fourlettercode == "ABMA")
abma_dat <- filter(abma, Data_point == "Before_DAT")
abma_dat_l1 <- filter(abma_dat, Leaf_number == 1)
abma_dat_aci_l1 <- fitaci(data = abma_dat_l1,
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"),
fitTPU = TRUE,
Tcorrect = TRUE)
plot(abma_dat_aci_l1)
?fitacis
?fitacis
abma_dat_aci_l1 <- fitaci(data = abma_dat_l1,
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"),
fitTPU = TRUE,
Tcorrect = TRUE)
## Fit DAT ACi curves for each species
for (code in unique(cmplt.grp$fourlettercode)) {
each <- cmplt.grp %>% filter(fourlettercode == code)
if (Data_point == "Before_DAT") {
fitacis(group = Leaf_Number, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), id = fourlettercode,
fitTPU = TRUE, Tcorrect = TRUE, how = "oneplot")
}
}
## Fit DAT ACi curves for each species
for (code in unique(cmplt.grp$fourlettercode)) {
each <- cmplt.grp %>% filter(fourlettercode == code)
if (cmplt.grp$Data_point == "Before_DAT") {
fitacis(group = Leaf_Number, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), id = fourlettercode,
fitTPU = TRUE, Tcorrect = TRUE, how = "oneplot")
}
}
## Fit DAT ACi curves for each species
for (code in unique(cmplt.grp$fourlettercode)) {
each <- cmplt.grp %>% filter(fourlettercode == code)
if (cmplt.grp$Data_point == "Before_DAT") {
fitacis(cmplt.grp, group = Leaf_Number, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), id = fourlettercode,
fitTPU = TRUE, Tcorrect = TRUE, how = "oneplot")
}
}
fitacis(group = Leaf_number, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), id = fourlettercode,
fitTPU = TRUE, Tcorrect = TRUE, how = "oneplot")
## Fit DAT ACi curves for each species
for (code in unique(cmplt.grp$fourlettercode)) {
each <- cmplt.grp %>% filter(fourlettercode == code)
if (cmplt.grp$Data_point == "Before_DAT") {
fitacis(group = Leaf_number, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), id = fourlettercode,
fitTPU = TRUE, Tcorrect = TRUE, how = "oneplot")
}
}
## Fit DAT ACi curves for each species
for (code in unique(cmplt.grp$fourlettercode)) {
each <- cmplt.grp %>% filter(fourlettercode == code)
if (cmplt.grp$Data_point == "Before_DAT") {
fitacis(cmplt.grp, group = Leaf_number, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), id = fourlettercode,
fitTPU = TRUE, Tcorrect = TRUE, how = "oneplot")
}
}
plot(abma_dat_aci_l1)
## Fit DAT ACi curves for each species
for (code in unique(cmplt.grp$fourlettercode)) {
each <- cmplt.grp %>% filter(fourlettercode == code)
if (cmplt.grp$Data_point == "Before_DAT") {
fitacis(cmplt.grp, group = Leaf_number, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), id = fourlettercode,
fitTPU = TRUE, Tcorrect = TRUE, how = "oneplot")
}
}
## Fit DAT ACi curves for each species
for (code in unique(cmplt.grp$fourlettercode)) {
each <- cmplt.grp %>% filter(fourlettercode == code)
if (cmplt.grp$Data_point == "Before_DAT") {
fitacis(cmplt.grp, group = cmplt.grp$Leaf_number, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), id = fourlettercode,
fitTPU = TRUE, Tcorrect = TRUE, how = "oneplot")
}
}
## Fit DAT ACi curves for each species
for (code in unique(cmplt.grp$fourlettercode)) {
each <- cmplt.grp %>% filter(fourlettercode == code)
if (each$Data_point == "Before_DAT") {
fitacis(each, group = Leaf_number, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), id = fourlettercode,
fitTPU = TRUE, Tcorrect = TRUE, how = "oneplot")
}
}
for (code in unique(cmplt.grp$fourlettercode)) {
each <- cmplt.grp %>% filter(Data_point == "Before_DAT")
fitacis(each, group = code, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), id = fourlettercode, fitTPU = TRUE,
Tcorrect = TRUE)
}
for (code in unique(cmplt.grp$fourlettercode)) {
each <- cmplt.grp %>% filter(Data_point == "Before_DAT")
fitacis(each, group = fourlettercode, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), id = code, fitTPU = TRUE,
Tcorrect = TRUE)
}
for (code in unique(cmplt.grp$fourlettercode)) {
each <- cmplt.grp %>% filter(Data_point == "Before_DAT")
fitacis(each, group = "fourlettercode", varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), id = code, fitTPU = TRUE,
Tcorrect = TRUE)
}
cmplt_DAT <- filter(cmplt.grp, Data_point == "Before_DAT")
fitacis(cmplt_DAT, group = "fourlettercode", varnames = list(ALEAF = "A", Tleaf = "Tleaf",
Ci = "Ci", PPFD = "Qin"),
id = fourlettercode, fitTPU = TRUE)
fitacis(cmplt_DAT, group = "fourlettercode", varnames = list(ALEAF = "A", Tleaf = "Tleaf",
Ci = "Ci", PPFD = "Qin"),
fitTPU = TRUE)
DAT_fits <- fitacis(cmplt_DAT, group = "fourlettercode",
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"),
fitTPU = TRUE, Tcorrect = TRUE)
DAT_fits <- fitacis(cmplt_DAT, group = "fourlettercode",
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"),
fitTPU = TRUE, Tcorrect = TRUE, fitmethod = "bilinear")
DAT_fits <- fitacis(cmplt_DAT, group = "fourlettercode",
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"),
Tcorrect = TRUE)
DAT_fits <- fitacis(cmplt_DAT, group = "fourlettercode",
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE,
id = Leaf_number)
View(DAT_fits)
plot(DAT_fits[[1]])
abma_dat_aci_l1 <- fitaci(data = abma_dat_l1,
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"),
fitTPU = TRUE,
Tcorrect = TRUE)
warnings()
### Leaf 1 Trad
abma <- filter(complete_species, fourlettercode == "ABMA")
abma_trad <- filter(abma, Data_point == "Traditional")
### Leaf 1 Trad
abma <- filter(complete_sp, fourlettercode == "ABMA")
abma_trad <- filter(abma, Data_point == "Traditional")
abma_trad_l1 <- filter(abma_trad, Leaf_number == 1)
abma_trad_aci_l1 <- fitaci(data = abma_trad_l1,
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"),
fitTPU = TRUE,
Tcorrect = TRUE)
warnings()
class(complete_sp)
complete_sp <- as_tibble(complete_sp)
class(complete_sp)
DAT_fits <- fitacis(cmplt_DAT, group = "fourlettercode",
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE,
id = Leaf_number)
abma_trad_aci_l1 <- fitaci(data = abma_trad_l1,
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"),
fitTPU = TRUE,
Tcorrect = TRUE)
warnings()
View(cmplt_DAT)
colnames(cmplt_DAT)
cmplt_DAT_no_delta <- subset(cmplt_DAT, select = -contains(expression(delta)))
?contains
rmv_delta <- function(file_name) {
file_name <- file_name[,!grepl(expression(delta), colnames(file_name))]
}
cmplt_DAT_no_delta <- rmv_delta(cmplt_DAT)
colnames(cmplt_DAT_no_delta)
?expression
