source("C:/Users/emmel/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/S0/51/Attachments/Emmy_R[4276].R")
source("C:/Users/emmel/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/S0/51/Attachments/Emmy_R[4276].R")
source("C:/Users/emmel/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/S0/51/Attachments/Emmy_R[4276].R")
source("C:/Users/emmel/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/S0/51/Attachments/Emmy_R[4276].R", echo=TRUE)
# data_pivot <- pivot_longer(data, cols=c(Jun.15, Jun.22, Jul.6, Jul.13, Jul.20, Jul.27, Aug.3, Aug.10), names_to = 'Date', values_to = 'Diameter')
data_pivot$Accession_ID <- as.character(data_pivot$Accession_ID)
f <- 1
View(f)
install.packages(dplyr)
install.packages("dplyr")
??corrplot
?corrplot
?round
?read.csv
?data.frame
library(tidyverse)
?plot
library(help = "base")
plot(cars)
df <- merge(c(1,2,3), c(4,6,8))
df
plot(df)
plot(df, x~y)
plot(df, y~x)
plot(df, x, y)
?plot
plot(c(2,4,6), c(5,6,7))
plot(y~x, data = df)
plot(x~y, data = df)
?require
?boxplot
?barplot
barplot(df)
barplot(y~x, data = df)
View(height4)
height4
head(longley)
barplot(GNP ~ Year, data = ongley)
barplot(GNP ~ Year, data = longley)
?hist
head(islands)
hist(islands)
?boxplot
?pie
?plot
?barplot
?hist
?boxplot
?pie
?pch
?lty
?plot
colors()
palette()
palette.colors()
palette.pals()
library(RColorBrewer)
brewer.pal()
?RColorBrewer
brewer.pal.info
library(ggplot2)
?geom_point
?aes
library(ggplot2)
?aes
?geom_bar
library(ggplot2)
?geom_bar
library(ggplot2)
library(plantecophys)
library(tidyverse)
## Plot all ACi curves on one graph by Species
ggplot(cmplt.grp, mapping = aes(x = Ci, y = A, color = fourlettercode)) +
geom_point(mapping = aes(pch = Data_point)) +
theme_classic()
## Load Packages
library(tidyverse)
library(plantecophys)
## Plot all ACi curves on one graph by Species
ggplot(cmplt.grp, mapping = aes(x = Ci, y = A, color = fourlettercode)) +
geom_point(mapping = aes(pch = Data_point)) +
theme_classic()
source("C:/Users/emmel/Desktop/DAT_proj/Tapajos_DAT_data_assembly.R", echo=TRUE)
cmplt.rm_out <- filter(complete_sp, Ci > -50 & A < 31)
## Group by Four Letter Code
cmplt.grp <- group_by(cmplt.rm_out, fourlettercode)
## Plot all ACi curves on one graph by Species
ggplot(cmplt.grp, mapping = aes(x = Ci, y = A, color = fourlettercode)) +
geom_point(mapping = aes(pch = Data_point)) +
theme_classic()
for (code in unique(cmplt.grp$fourlettercode)) {
df1 <- cmplt.grp %>% filter(fourlettercode == code)
gg1 <- ggplot(data = df1, mapping = aes(x = Ci, y = A, color = Data_point)) +
geom_point() +
theme_classic() +
scale_color_viridis_d()
filename1 <- paste("plot_", code, ".png")
ggsave(filename1, gg1)
}
cmplt_DAT <- filter(cmplt.grp, Data_point == "Before_DAT")
DAT_fits <- fitacis(cmplt_DAT, group = "fourlettercode",
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE,
id = Leaf_number)
### Leaf 1 Trad
abma <- filter(complete_sp, fourlettercode == "ABMA")
abma_trad <- filter(abma, Data_point == "Traditional")
abma_trad_l1 <- filter(abma_trad, Leaf_number == 1)
abma_trad_aci_l1 <- fitaci(data = abma_trad_l1,
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"),
fitTPU = TRUE,
Tcorrect = TRUE)
warnings()
library(tidyverse)
library(plantecophys)
#library(RCurl)
DAT_fits <- fitacis(cmplt_DAT, group = "fourlettercode",
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE,
id = Leaf_number)
fitacis
data <- cmplt_DAT
d <- split(data, data[, "fourlettercode"])
fitacis(d, fourlettercode, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE)
fitacis(data, fourlettercode, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE)
fitacis(d, "fourlettercode", varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE)
fitacis(data, "fourlettercode", varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE)
fitaci(d$ABMA, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE)
abma_trad_aci_l1 <- fitaci(data = abma_trad_l1,
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"),
fitTPU = TRUE,
Tcorrect = TRUE)
warnings()
colnames(cmplt_DAT)
## Plot all ACi curves on one graph by Species
ggplot(cmplt.grp, mapping = aes(x = Ci, y = A, color = fourlettercode)) +
geom_point(mapping = aes(pch = Data_point)) +
theme_classic()
for (code in unique(cmplt.grp$fourlettercode)) {
df1 <- cmplt.grp %>% filter(fourlettercode == code)
gg1 <- ggplot(data = df1, mapping = aes(x = Ci, y = A, color = Data_point)) +
geom_point() +
theme_classic() +
scale_color_viridis_d()
filename1 <- paste("plot_", code, ".png")
ggsave(filename1, gg1)
}
# Load Packages/Data ------------------------------------------------------
## Load Packages
library(tidyverse)
library(plantecophys)
library(greekLetters)
library(ggpubr)
getwd()
setwd("C://Users/emmel/Desktop/DAT_proj")
getwd()
#Create an id data table. This includes the species code so we can merge it later
unique_ids <- read.csv("Inputs/unique_ids.csv")
head(unique_ids)
# Load Data
complete_sp <- read.csv("/Inputs/clean_aci_with_uniquecode.csv",
sep = ",",
fileEncoding="latin1")
# Load Data
complete_sp <- read.csv("Inputs/clean_aci_with_uniquecode.csv",
sep = ",",
fileEncoding="latin1")
which(complete_sp$Ci < -50) #4 Ci values are super negative: 394, 395, 396, 398
which(complete_sp$Ci < 0) # Add in 16 more values, all for MACA1
complete_sp[c(394,395,396,398),19] # What are those values? Should they be outliers?
which(complete_sp$A > 40) # 2 A values greater than 31: 399 and 400
which(complete_sp$A < 1)
complete_sp[c(397,398,399,400,401),17]
cmplt.rm_out <- filter(complete_sp, Ci > 0 & A < 31)  ## Ci > 0 (we had been doing Ci > -50)
#filter again for A above 1 to try and fix the DAT curves that look weird
which(complete_sp$A < 1)
cmplt.rm_out <- filter(complete_sp, A > 1)
## Group by unique
cmplt.grp <- group_by(cmplt.rm_out, fourlettercode) %>%
group_by(unique)
# Fitting ACi Curves ------------------------------------------------------
# install.packages("greekLetters")
library(greekLetters)
## Separate by DAT and trad, and convert to dataframe
cmplt_DAT <- filter(cmplt.grp, Data_point == "Before_DAT") %>%
select(-contains(greeks("Delta"))) #removes the columns with deltas
cmplt_DAT <- as.data.frame(cmplt_DAT)
head(cmplt_DAT)
cmplt_trad <- filter(cmplt.grp, Data_point == "Traditional") %>%
select(-contains(greeks("Delta")))
cmplt_trad <- as.data.frame(cmplt_trad)
head(cmplt_trad)
# Fit the ACi curves for each species for DAT using fitacis
DAT_fits <- fitacis(cmplt_DAT, group = "unique",
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = FALSE, Tcorrect = TRUE)
plot(DAT_fits[[7]]) # I was just exploring here
coef(DAT_fits)
plot(DAT_fits[[1]]) # I was just exploring here
plot(DAT_fits[[2]]) # I was just exploring here
plot(DAT_fits[[3]]) # I was just exploring here
plot(DAT_fits[[4]]) # I was just exploring here
plot(DAT_fits[[5]]) # I was just exploring here
plot(DAT_fits[[6]]) # I was just exploring here
plot(DAT_fits[[7]]) # I was just exploring here
plot(DAT_fits[[8]]) # I was just exploring here
plot(DAT_fits[[9]]) # I was just exploring here
plot(DAT_fits[[10]]) # I was just exploring here
## Make a dataframe out of coefficients
par_dat <- as.data.frame(coef(DAT_fits), row.names = NULL)
par_dat <- par_dat[-1,]
par_dat <- par_dat %>%
add_column(method = "dat")
table(par_dat$method) ## number of initial DAT curves
# Fit the ACi curves for Traditional using fitacis
trad_fits <- fitacis(cmplt_trad, group = "unique",
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = FALSE, Tcorrect = TRUE)
plot(trad_fits[[20]]) # 20 is pretty ugly
coef(trad_fits)
plot(trad_fits[[15]]) # 20 is pretty ugly
coef(trad_fits)
## Make a dataframe of coefficients
par_trad <- as.data.frame(coef(trad_fits), row.names = NULL)
par_trad <- par_trad[-1,]
par_trad <- par_trad %>%
add_column(method = "trad")
# Merge DAT and Trad dfs
par_join <- bind_rows(par_dat, par_trad)
par_species <- left_join(par_join, unique_ids, by = "unique")
par_join
par_species <- left_join(par_join, unique_ids, by = "unique")
par_species
par_species <- left_join(par_join, unique_ids, by = "unique") # why isn't this working?
colnames(par_join)
rlang::last_error()
# Load Packages/Data ------------------------------------------------------
## Load Packages
library(tidyverse)
library(plantecophys)
library(greekLetters)
library(ggpubr)
# Load Data
complete_sp <- read.csv("Inputs/clean_aci_with_uniquecode.csv", sep = ",",
fileEncoding="latin1") #changed this to work on anyone's computer
#Create an id data table. This includes the species code so we can merge it later
unique_ids <- read.csv("Inputs/unique_ids.csv") # same here
which(complete_sp$Ci < -50) #4 Ci values are super negative: 394, 395, 396, 398
which(complete_sp$Ci < 0) # Add in 16 more values, all for MACA1
complete_sp[c(394,395,396,398),19] # What are those values? Should they be outliers?
which(complete_sp$A > 40) # 2 A values greater than 31: 399 and 400
which(complete_sp$A < 1)
complete_sp[c(397,398,399,400,401),17]
cmplt.rm_out <- filter(complete_sp, Ci > 0 & A < 31)  ## Ci > 0 (we had been doing Ci > -50)
#filter again for A above 1 to try and fix the DAT curves that look weird
which(complete_sp$A < 1)
cmplt.rm_out <- filter(complete_sp, A > 1)
## Separate by DAT and trad, and convert to dataframe
cmplt_DAT <- filter(cmplt.grp, Data_point == "Before_DAT") %>%
select(-contains(greeks("Delta"))) #removes the columns with deltas
cmplt_DAT <- as.data.frame(cmplt_DAT)
head(cmplt_DAT)
cmplt_trad <- filter(cmplt.grp, Data_point == "Traditional") %>%
select(-contains(greeks("Delta")))
cmplt_trad <- as.data.frame(cmplt_trad)
head(cmplt_trad)
# Fit the ACi curves for each species for DAT using fitacis
DAT_fits <- fitacis(cmplt_DAT, group = "unique", id = "unique",
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = FALSE, Tcorrect = TRUE)
plot(DAT_fits[[15]], main = coef(DAT_fits)$unique[15])
View(cmplt_DAT)
View(complete_sp)
## Group by unique
cmplt.grp <- group_by(cmplt.rm_out, fourlettercode) %>%
group_by(unique)
## Separate by DAT and trad, and convert to dataframe
cmplt_DAT <- filter(cmplt.grp, Data_point == "Before_DAT") %>%
select(-contains(greeks("Delta"))) #removes the columns with deltas
cmplt_DAT <- as.data.frame(cmplt_DAT)
head(cmplt_DAT)
cmplt_trad <- filter(cmplt.grp, Data_point == "Traditional") %>%
select(-contains(greeks("Delta")))
cmplt_trad <- as.data.frame(cmplt_trad)
head(cmplt_trad)
# Fit the ACi curves for each species for DAT using fitacis
DAT_fits <- fitacis(cmplt_DAT, group = "unique", id = "unique",
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = FALSE, Tcorrect = TRUE)
plot(DAT_fits[[15]], main = coef(DAT_fits)$unique[15])
plot(DAT_fits[[16]], main = coef(DAT_fits)$unique[16])
