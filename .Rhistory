source("C:/Users/emmel/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/S0/51/Attachments/Emmy_R[4276].R")
source("C:/Users/emmel/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/S0/51/Attachments/Emmy_R[4276].R")
source("C:/Users/emmel/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/S0/51/Attachments/Emmy_R[4276].R")
source("C:/Users/emmel/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/S0/51/Attachments/Emmy_R[4276].R", echo=TRUE)
# data_pivot <- pivot_longer(data, cols=c(Jun.15, Jun.22, Jul.6, Jul.13, Jul.20, Jul.27, Aug.3, Aug.10), names_to = 'Date', values_to = 'Diameter')
data_pivot$Accession_ID <- as.character(data_pivot$Accession_ID)
f <- 1
View(f)
install.packages(dplyr)
install.packages("dplyr")
??corrplot
?corrplot
?round
?read.csv
?data.frame
library(tidyverse)
?plot
library(help = "base")
plot(cars)
df <- merge(c(1,2,3), c(4,6,8))
df
plot(df)
plot(df, x~y)
plot(df, y~x)
plot(df, x, y)
?plot
plot(c(2,4,6), c(5,6,7))
plot(y~x, data = df)
plot(x~y, data = df)
?require
?boxplot
?barplot
barplot(df)
barplot(y~x, data = df)
View(height4)
height4
head(longley)
barplot(GNP ~ Year, data = ongley)
barplot(GNP ~ Year, data = longley)
?hist
head(islands)
hist(islands)
?boxplot
?pie
?plot
?barplot
?hist
?boxplot
?pie
?pch
?lty
?plot
colors()
palette()
palette.colors()
palette.pals()
library(RColorBrewer)
brewer.pal()
?RColorBrewer
brewer.pal.info
library(ggplot2)
?geom_point
?aes
library(ggplot2)
?aes
?geom_bar
library(ggplot2)
?geom_bar
library(ggplot2)
library(plantecophys)
library(tidyverse)
## Plot all ACi curves on one graph by Species
ggplot(cmplt.grp, mapping = aes(x = Ci, y = A, color = fourlettercode)) +
geom_point(mapping = aes(pch = Data_point)) +
theme_classic()
## Load Packages
library(tidyverse)
library(plantecophys)
## Plot all ACi curves on one graph by Species
ggplot(cmplt.grp, mapping = aes(x = Ci, y = A, color = fourlettercode)) +
geom_point(mapping = aes(pch = Data_point)) +
theme_classic()
source("C:/Users/emmel/Desktop/DAT_proj/Tapajos_DAT_data_assembly.R", echo=TRUE)
cmplt.rm_out <- filter(complete_sp, Ci > -50 & A < 31)
## Group by Four Letter Code
cmplt.grp <- group_by(cmplt.rm_out, fourlettercode)
## Plot all ACi curves on one graph by Species
ggplot(cmplt.grp, mapping = aes(x = Ci, y = A, color = fourlettercode)) +
geom_point(mapping = aes(pch = Data_point)) +
theme_classic()
for (code in unique(cmplt.grp$fourlettercode)) {
df1 <- cmplt.grp %>% filter(fourlettercode == code)
gg1 <- ggplot(data = df1, mapping = aes(x = Ci, y = A, color = Data_point)) +
geom_point() +
theme_classic() +
scale_color_viridis_d()
filename1 <- paste("plot_", code, ".png")
ggsave(filename1, gg1)
}
cmplt_DAT <- filter(cmplt.grp, Data_point == "Before_DAT")
DAT_fits <- fitacis(cmplt_DAT, group = "fourlettercode",
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE,
id = Leaf_number)
### Leaf 1 Trad
abma <- filter(complete_sp, fourlettercode == "ABMA")
abma_trad <- filter(abma, Data_point == "Traditional")
abma_trad_l1 <- filter(abma_trad, Leaf_number == 1)
abma_trad_aci_l1 <- fitaci(data = abma_trad_l1,
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"),
fitTPU = TRUE,
Tcorrect = TRUE)
warnings()
library(tidyverse)
library(plantecophys)
#library(RCurl)
DAT_fits <- fitacis(cmplt_DAT, group = "fourlettercode",
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE,
id = Leaf_number)
fitacis
data <- cmplt_DAT
d <- split(data, data[, "fourlettercode"])
fitacis(d, fourlettercode, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE)
fitacis(data, fourlettercode, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE)
fitacis(d, "fourlettercode", varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE)
fitacis(data, "fourlettercode", varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE)
fitaci(d$ABMA, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE)
abma_trad_aci_l1 <- fitaci(data = abma_trad_l1,
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"),
fitTPU = TRUE,
Tcorrect = TRUE)
warnings()
colnames(cmplt_DAT)
## Plot all ACi curves on one graph by Species
ggplot(cmplt.grp, mapping = aes(x = Ci, y = A, color = fourlettercode)) +
geom_point(mapping = aes(pch = Data_point)) +
theme_classic()
for (code in unique(cmplt.grp$fourlettercode)) {
df1 <- cmplt.grp %>% filter(fourlettercode == code)
gg1 <- ggplot(data = df1, mapping = aes(x = Ci, y = A, color = Data_point)) +
geom_point() +
theme_classic() +
scale_color_viridis_d()
filename1 <- paste("plot_", code, ".png")
ggsave(filename1, gg1)
}
getwd()
library(plantecophys)
library(photosynthesis)
fitaci()
fitaci
do_acirun
photosynthesis
fit_aci_response
library(plantecophys)
fitaci
?any()
## Load Packages
library(tidyverse)
wd <- "/Users/emmel/Desktop/DAT_proj/"
setwd(wd)
library(plantecophys)
cmplt.rm_out <- read.csv(file = paste0(wd, "Inputs/Aci_no_out.csv"), header = TRUE, sep = ",")
cmplt_DAT <- filter(cmplt.rm_out, Data_point == "Before_DAT")
DAT_filt_ex <- cmplt_DAT %>%
group_by(unique) %>%
group_modify(~exclude_backwardsCi(data = .x, givedf = TRUE), .keep = FALSE)
## Make function to find min Ci and exclude points with Anet below the Anet for that min Ci
exclude_backwardsCi <- function(data, givedf){
min_Ci_ind <- which(data$Ci == min(data$Ci))
data_new <- slice(data, -which(data$A < data$A[min_Ci_ind]))
if(givedf =="TRUE"){
data_new <- as.data.frame(data_new)
}
return(data_new)
}
DAT_filt_ex <- cmplt_DAT %>%
group_by(unique) %>%
group_modify(~exclude_backwardsCi(data = .x, givedf = TRUE), .keep = FALSE)
DAT_filt_ex <- as.data.frame(DAT_filt_ex)
### Run K6706L1 separately, since it gives a weird curve
k6706l1 <- filter(DAT_filt_ex, unique == "K6706L1")
k6706l1_fit <- fitaci(k6706l1, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE)
k6706l1_fit <- fitaci(k6706l1, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE,
citransition = 200)
plot(k6706l1_fit)
coef(k6706l1_fit)
k6706l1_fit <- fitaci(k6706l1, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE,
citransition = 100)
coef(k6706l1_fit)
k6706l1_fit <- fitaci(k6706l1, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE,
citransition = 200)
# PDF file of all plots
pdf(file = paste0(wd,"Figures/dataci_ecophys.pdf"), height=10, width=20)
plot.new()
for (curve in 1:33){
title <- coef(DAT_fits_ecophys)$unique[[curve]]
plot(DAT_fits_ecophys[[curve]], main = title)
}
dev.off()
png(filename = paste0(getwd(), "/Figures/", ecophys_K6706L1_fixed.png"))
plot(k6706l1_fit, main = "K6706L1"")
dev.off()
png(filename = paste0(getwd(), "/Figures/", ecophys_K6706L1_fixed.png"))
plot(k6706l1_fit, main = "K6706L1)
dev.off()
png(filename = paste0(getwd(), "/Figures/", ecophys_K6706L1_fixed.png"))
plot(k6706l1_fit, main = "K6706L1")
dev.off()
png(filename = paste0(wd, "Figures/ecophys_K6706L1_fixed.png"))
plot(k6706l1_fit, main = "K6706L1")
dev.off()
## Load in the datasets
params_ecophys <- read.csv(file = paste0(wd, "Results/params_ecophys.csv"), sep = ",",
header = TRUE) %>%
filter(method == "dat")
View(params_ecophys)
par_06l1 <- as.data.frame(coef(k6706l1_fit), row.names = NULL)
View(par_06l1)
print(par_06l1)
plot(k6706l1_fit)
k6706l1_fit <- fitaci(k6706l1, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE,
citransition = 400) # The Ci transition is specified as 200, as per Sharkey's
# recommendations and to avoid an unreasonable Jmax value
plot(k6706l1_fit)
coef(k6706l1_fit)
k6706l1_fit <- fitaci(k6706l1, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE,
citransition = 50) # The Ci transition is specified as 200, as per Sharkey's
# recommendations and to avoid an unreasonable Jmax value
plot(k6706l1_fit)
coef(k6706l1_fit)
#  citransition = 200) # The Ci transition is specified as 200, as per Sharkey's
# recommendations and to avoid an unreasonable Jmax value
plot(k6706l1_fit)
k6706l1_fit <- fitaci(k6706l1, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE)#,
coef(k6706l1_fit)
k6706l1_fit <- fitaci(k6706l1, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE),
citransition = 50) # The Ci transition is specified as 200, as per Sharkey's
k6706l1_fit <- fitaci(k6706l1, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE,
citransition = 50) # The Ci transition is specified as 200, as per Sharkey's
# recommendations and to avoid an unreasonable Jmax value
plot(k6706l1_fit)
coef(k6706l1_fit)
k6706l1_fit <- fitaci(k6706l1, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE,
citransition = 200) # The Ci transition is specified as 200, as per Sharkey's
# recommendations and to avoid an unreasonable Jmax value
plot(k6706l1_fit)
coef(k6706l1_fit)
k6706l1_fit <- fitaci(k6706l1, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE,
citransition = 300) # The Ci transition is specified as 200, as per Sharkey's
# recommendations and to avoid an unreasonable Jmax value
plot(k6706l1_fit)
k6706l1_fit <- fitaci(k6706l1, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE,
citransition = 400) # The Ci transition is specified as 200, as per Sharkey's
# recommendations and to avoid an unreasonable Jmax value
plot(k6706l1_fit)
coef(k6706l1_fit)
k6706l1_fit <- fitaci(k6706l1, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE,
citransition = 300) # The Ci transition is specified as 200, as per Sharkey's
# recommendations and to avoid an unreasonable Jmax value
plot(k6706l1_fit)
coef(k6706l1_fit)
k6706l1_fit <- fitaci(k6706l1, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE,
citransition = 200) # The Ci transition is specified as 200, as per Sharkey's
coef(k6706l1_fit)
View(k6706l1_fit)
k6706l1_fit <- fitaci(k6706l1, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE,
citransition = 200) # The Ci transition is specified as 200, as per Sharkey's
View(k6706l1_fit)
?fitacis
## Fit the ACi curves for each species for DAT using fitacis
DAT_fits_ecophys <- fitacis(DAT_filt_ex, group = "unique",
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE, citransition = 200)
coef(DAT_fits_ecophys)
## Fit the ACi curves for each species for DAT using fitacis
DAT_fits_ecophys <- fitacis(DAT_filt_ex, group = "unique",
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE, citransition = 100)
coef(DAT_fits_ecophys)
?fitaci
View(k6706l1_fit)
View(DAT_fits_ecophys)
## Fit the ACi curves for each species for DAT using fitacis
DAT_fits_ecophys <- fitacis(DAT_filt_ex, group = "unique",
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE, citransition = 200)
coef(DAT_fits_ecophys)
View(DAT_fits_ecophys)
## Fit the ACi curves for each species for DAT using fitacis
DAT_fits_ecophys <- fitacis(DAT_filt_ex, group = "unique",
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE, citransition = 300)
coef(DAT_fits_ecophys)
View(DAT_fits_ecophys)
