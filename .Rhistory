source("C:/Users/emmel/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/S0/51/Attachments/Emmy_R[4276].R")
source("C:/Users/emmel/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/S0/51/Attachments/Emmy_R[4276].R")
source("C:/Users/emmel/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/S0/51/Attachments/Emmy_R[4276].R")
source("C:/Users/emmel/AppData/Local/Packages/microsoft.windowscommunicationsapps_8wekyb3d8bbwe/LocalState/Files/S0/51/Attachments/Emmy_R[4276].R", echo=TRUE)
# data_pivot <- pivot_longer(data, cols=c(Jun.15, Jun.22, Jul.6, Jul.13, Jul.20, Jul.27, Aug.3, Aug.10), names_to = 'Date', values_to = 'Diameter')
data_pivot$Accession_ID <- as.character(data_pivot$Accession_ID)
f <- 1
View(f)
install.packages(dplyr)
install.packages("dplyr")
??corrplot
?corrplot
?round
?read.csv
?data.frame
library(tidyverse)
?plot
library(help = "base")
plot(cars)
df <- merge(c(1,2,3), c(4,6,8))
df
plot(df)
plot(df, x~y)
plot(df, y~x)
plot(df, x, y)
?plot
plot(c(2,4,6), c(5,6,7))
plot(y~x, data = df)
plot(x~y, data = df)
?require
?boxplot
?barplot
barplot(df)
barplot(y~x, data = df)
View(height4)
height4
head(longley)
barplot(GNP ~ Year, data = ongley)
barplot(GNP ~ Year, data = longley)
?hist
head(islands)
hist(islands)
?boxplot
?pie
?plot
?barplot
?hist
?boxplot
?pie
?pch
?lty
?plot
colors()
palette()
palette.colors()
palette.pals()
library(RColorBrewer)
brewer.pal()
?RColorBrewer
brewer.pal.info
library(ggplot2)
?geom_point
?aes
library(ggplot2)
?aes
?geom_bar
library(ggplot2)
?geom_bar
library(ggplot2)
library(plantecophys)
library(tidyverse)
## Plot all ACi curves on one graph by Species
ggplot(cmplt.grp, mapping = aes(x = Ci, y = A, color = fourlettercode)) +
geom_point(mapping = aes(pch = Data_point)) +
theme_classic()
## Load Packages
library(tidyverse)
library(plantecophys)
## Plot all ACi curves on one graph by Species
ggplot(cmplt.grp, mapping = aes(x = Ci, y = A, color = fourlettercode)) +
geom_point(mapping = aes(pch = Data_point)) +
theme_classic()
source("C:/Users/emmel/Desktop/DAT_proj/Tapajos_DAT_data_assembly.R", echo=TRUE)
cmplt.rm_out <- filter(complete_sp, Ci > -50 & A < 31)
## Group by Four Letter Code
cmplt.grp <- group_by(cmplt.rm_out, fourlettercode)
## Plot all ACi curves on one graph by Species
ggplot(cmplt.grp, mapping = aes(x = Ci, y = A, color = fourlettercode)) +
geom_point(mapping = aes(pch = Data_point)) +
theme_classic()
for (code in unique(cmplt.grp$fourlettercode)) {
df1 <- cmplt.grp %>% filter(fourlettercode == code)
gg1 <- ggplot(data = df1, mapping = aes(x = Ci, y = A, color = Data_point)) +
geom_point() +
theme_classic() +
scale_color_viridis_d()
filename1 <- paste("plot_", code, ".png")
ggsave(filename1, gg1)
}
cmplt_DAT <- filter(cmplt.grp, Data_point == "Before_DAT")
DAT_fits <- fitacis(cmplt_DAT, group = "fourlettercode",
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE,
id = Leaf_number)
### Leaf 1 Trad
abma <- filter(complete_sp, fourlettercode == "ABMA")
abma_trad <- filter(abma, Data_point == "Traditional")
abma_trad_l1 <- filter(abma_trad, Leaf_number == 1)
abma_trad_aci_l1 <- fitaci(data = abma_trad_l1,
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"),
fitTPU = TRUE,
Tcorrect = TRUE)
warnings()
library(tidyverse)
library(plantecophys)
#library(RCurl)
DAT_fits <- fitacis(cmplt_DAT, group = "fourlettercode",
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci",
PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE,
id = Leaf_number)
fitacis
data <- cmplt_DAT
d <- split(data, data[, "fourlettercode"])
fitacis(d, fourlettercode, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE)
fitacis(data, fourlettercode, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE)
fitacis(d, "fourlettercode", varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE)
fitacis(data, "fourlettercode", varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE)
fitaci(d$ABMA, varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"), fitTPU = TRUE, Tcorrect = TRUE)
abma_trad_aci_l1 <- fitaci(data = abma_trad_l1,
varnames = list(ALEAF = "A", Tleaf = "Tleaf", Ci = "Ci", PPFD = "Qin"),
fitTPU = TRUE,
Tcorrect = TRUE)
warnings()
colnames(cmplt_DAT)
## Plot all ACi curves on one graph by Species
ggplot(cmplt.grp, mapping = aes(x = Ci, y = A, color = fourlettercode)) +
geom_point(mapping = aes(pch = Data_point)) +
theme_classic()
for (code in unique(cmplt.grp$fourlettercode)) {
df1 <- cmplt.grp %>% filter(fourlettercode == code)
gg1 <- ggplot(data = df1, mapping = aes(x = Ci, y = A, color = Data_point)) +
geom_point() +
theme_classic() +
scale_color_viridis_d()
filename1 <- paste("plot_", code, ".png")
ggsave(filename1, gg1)
}
getwd()
library(tidyverse)
library(googledrive)
library(readxl)
wd <- "C://Users/emmel/Desktop/DAT_proj"
setwd(wd)
# Load Data from Directory ------------------------------------------------
aci_files_nm <- list.files(path = "C:/Users/emmel/Desktop/DAT_proj/Raw_data",
pattern = "walkup_aci_clean")
print(aci_files_nm)
for (i in 1:length(aci_files_nm)) {
files1 <- read_xlsx(path = paste0("C:/Users/emmel/Desktop/DAT_proj/Raw_data/",
aci_files_nm[i]), sheet = "Measurements", skip = 14)
sliced <- slice(files1, -(1))
assign(paste0("data_", aci_files_nm[i]), sliced)
}
## Make sure all the data have the same columns (in this case, the 6th and 7th are missing
## some columns)
Reduce(setdiff, list(colnames(`data_2022-08-06-1020_walkup_aci_clean.xlsx`),
colnames(`data_2022-08-07-0941_walkup_aci_clean.xlsx`),
colnames(`data_2022-08-11-0904_walkup_aci_clean.xlsx`),
colnames(`data_2022-08-11-0949_walkup_aci_clean.xlsx`),
colnames(`data_2022-08-11-1050_walkup_aci_clean.xlsx`),
colnames(`data_2022-08-12-0928_walkup_aci_clean.xlsx`),
colnames(`data_2022-08-13-1007_walkup_aci_clean.xlsx`),
colnames(`data_2022-08-14-0906_walkup_aci_clean.xlsx`),
colnames(`data_2022-08-08-0854_walkup_aci_clean.xlsx`),
colnames(`data_2022-08-09-0911_walkup_aci_clean.xlsx`),
colnames(`data_2022-08-10-0854_walkup_aci_clean.xlsx`),
colnames(`data_2022-08-16-walkup_aci_clean.xlsx`))) #finds the unique columns
## Make a function to remove all the stability criteria columns, since they are uneven
## across files
rmv_stbl <- function(file_name) {
file_name <- file_name[,!grepl(":", colnames(file_name))]
}
